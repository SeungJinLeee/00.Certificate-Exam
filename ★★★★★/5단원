1.JSON:속성-값 쌍 또는 키-값 쌍으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷
       특징:AJAX에서 많이 사용되고 XML을 대체하는 주요 데이터 포맷
       장점:XML보다 가볍고 빠름,자료종류에 큰 제한이 없음(숫자,문자열,배열,객체),자료형이 다양
       단점:태그가 없어서 가독성이 떨어짐
  XML:HTML의 단점을 보완한 인터넷 언어로, SGML의 복잡한 단점을 개선한 특수한 목적을 갖는 마크업 언어이다
      W3C에서 개발되었으며, 웹 브라우저간 호환이 되지 않는 문제와 SGML의 복잡함을 해결하기 위해 개발된 다목적 마크업언어
      특징:송수신 시스템 간 데이터 연계의 편의성을 위해서 전송되는 데이터 구조를 동일한 형태로 정의한다
          인간과 기계가 모두 이해할수 있는 텍스트 형태로 마크업 포맷을 정의하기 위한 메타언어
  AJAX:(비동기통신기법)자바스크립트를 사용하여 웹 서버와 클라이언트 간 비동기적으로 XML 데이터를 교환하고 조작하기 위한 웹기술
        주요기술:XMLHttpRequest,JavaScript,XML,DOM,XSLT,HTML,CSS
                XMLHttpRequest:웹 브라우저와 웹 서버간에 메서드로 데이터를 전송하는 객체 폼의 API
                               비동기 통신을 담당하는 자바스크립트 객체
                JavaScript:객체 기반의 스크립트 프로그래밍 언어
                           웹 브라우저 내에서 주로 사용되며, 다른 응용 프로그램의 내장 객체에도 접근할 수 있는 기능 소유
                XML:HTML의 단점을 보완한 인터넷 언어로서 SGML의 복잡한 단점을 개선한 특수한 목적을 갖는 마크업 언어
                DOM:XML문서를 트리구조의 형태로 접근할 수있게 해주는 API
                    플랫폼/언어 중립적으로 구조화된 문서를 표현하는 객체지향 모델
                XSLT:XML문서를 다른 XMl문서로 변환하는데 사용되는 XML기반 언어
                     W3C에서 제정한 표준으로 XML변환 언어를 사용하여 XML문서로 바꿔주며, 탐색하기 위해 XPath 를 사용
                HTML:인터넷 웹 문서를 표현하는 표준화된 마크업 언어
                CSS:마크업 언어가 실제 표시되는 방법을 기술하는 언어
                    운영체제나 사용 프로그램과 관계없이 글자 크기,클자체,줄간격,색상등을 자유롭게 선택할수 있는 스타일 시트
  REST:웹과 같은 분산하이퍼미디어 환경에서 자원의 존재/상태정보를 표준화된 HTTP메서드로 주고받는 웹 아키텍처      
    
2.DB암호화 알고리즘(대비해)
    1]대칭 키 암호화 알고리즘: 암복호화에 같은 암호 키를 쓰는 알고리즘
    2]비대칭 키 암호화 알고리즘: 공개키는 누구나 알수 있지만, 그에 대응하는 비밀키는 키의 소유자만 알수 있도록
                                공개키와 비밀키를 사용하는 알고리즘
    3]해시 암호화 알고리즘:해시값으로 입력값을 찾아낼수 없는 일방향성의 특성을 가진 알고리즘
    
3.DB암호화 기법(애플티하)
    1]API 방식:애플리케이션 레벨에서 암호모듈(API)을 적용하는 애플리케이션 수정방식
                애플리케이션 서버에 암복호화, 정책관리,키 관리 등의 부하 발생
    2]플러그인 방식:암복호화 모듈이 DB서버에 설치된 방식
                    DB서버에 암복호화,정책관리,키관리등의 부하 발생
    3]TDE방식:DB서버의 DBMS커널이 자체적으로 암복호화 기능을 수행하는 방식
              내장되어있는 암호화 기능을 이용
    4]하이브리드방식:API방식과 플러그인 방식을 결합하는 방식
                    :DB서버와 애플리케이션 서버로 부하 분산
                    
4.중요 인터페이스 데이터의 암호화 전송
  민감한 정보를 통신 채널을 통하여 전송 시에는 반드시 암복호화 과정을 거쳐야 하고, IPSec,SSL/TLS,S-HTTP등 보안채널을 활용하여 전송한다
    1]IPSec:IP계층(3계층)에서 무결성과 인증을 보장하는 인증 헤더(AH)와 기밀성을 보장하는 암호화(ESP)를 이용하여 양 종단간 구간에 보안 서비스를 제공하는 터널링 프로토콜
    2]SSL/TLS:전송계층(4계층)과 응용계층(7계층)사이에서 클라이언트와 서버간의 웹데이터 암호화(기밀성),상호 인증 및 전송 시 데이터 무결성을 보장하는 보안프로토콜
    3]S-HTTP:웹상에서 네트워크 트래픽을 암호화하는 주요 방법 중 하나로서 클라이언트와 서버간에 전송되는 모든 메시지를 각각 암호화 하여 전송
    
5.인터페이스 구현 검증 도구 종류(엑스피 앤셀워)
    1]xUnit:자바,c++, .Net(Nunit)등 다양한 언어를 지원하는 단위 테스트 프레임 워크
            소프트웨어의 함수나 클래스 같은 서로 다른 구성 원소(단위)를 테스트할수 있게 해주는 도구
    2]STAF:서비스 호출,컴포넌트 재사용 등 다양한 환경을 지원하는 테스트 프레임 워크
            각 테스트 대상 분산 환경에 데몬은 사용하여 테스트 대상 프로그램을 통해 테스트를 수행하고,통합하며 자동화하는 검증 도구
    3]FitNesse:웹 기반 테스트 케이스 설계/실행/결과 확인등을 지원하는 테스트 프레임 워크
              사용자가 테스트 케이스 테이블을 작성하면 빠르고 편하게 자동으로 원하는 값에 대해 테스트를 할수 있는 장점이 있음
    4]NTAF:FitNesse의 장점인 협업 기능과 STAF의 장점인 재사용 및 호가장성을 통합한 NHN(naver)의 테스트 자동화 프레임워크
    5]Selenium:다양한 브라우저 지원 및 개발 언어를 지원하는 웹 애플리케이션 테스트 프레임워크
               테스트 스크립트 언어를 학습할 필요없이 기능 테스트를 만들기 위한 도구를 제공
    6]watir:루비기반 웹 애플리케이션 테스트 프레임워크
            모든 언어 기반의 웹 애플리케이션 테스트와 브라우저 호환성 테스팅 가능
            
 6.인터페이스 감시도구
    1]스카우터:애플리케이션에 대한 모니터링 및 DB Agent를 통한 오픈 소스 DB 모니터링 기능, 인터페이스 감시 기능을 제공
    2]제니퍼:애플리케이션의 개발부터 테스트,오픈,운영,안정화까지 전 생애주기단계 동안 성능을 모니터링하고 분석해주는 APM소프트웨어
