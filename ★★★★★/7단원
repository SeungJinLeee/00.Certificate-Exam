1.트랜잭션:인가받지 않은 사용자로부터 데이터를 보장하기 위해 DBMS가 가져야 하는 특성이자,
           데이터베이스 시스템에서 하나의 논리적 기능을 정상적으로 수행하기 위한 작업의 기본 단위이다.
           
           특성
           1]원자성:분해가 불가능한 작업의 최소단위
                    연산 전체가 성공 또는 실패
                    하나라도 실패할 경우 전체가 취소되어야하는 특성
           2]일관성:트랜잭션이 실행 성공 후 항상 일관된 데이터베이스 상태를 보존해야하는 특성
           3]격리성:트랜잭션 실행 중 생성하는 연산의 중간 결과를 다른 트랜잭션이 접근 불가한 특성
           4]영속성:성공이 완료된 트랜잭션의 결과는 영속적으로 데이터베이스에 저장하는 특성
           
           제어
           커밋,롤백,체크포인트
           롤백:오류가 발생했을때, 오류 이전의 특정시점 상태로 되돌려주는 제어어
           커밋:트랜잭션을 메모리에 영구적으로 저장하는 제어어
           체크포인트:ROLLBACK을 위한 시점을 지정하는 
           
           병행제어(일관성 주요 기법)
           개념:병행 제어는 다수 사용자 환경에서 여러 트랜잭션을 수행할 때 데이터베이스 일관성 유지를 위해 상호작용을 제어하는 기법
           목적:데이터베이스의 공유를 최대화한다
                시스템의 활용도를 최대화한다
                데이터베이스의 일관성을 유지한다
                사용자에 대한 응답시간을 최소화한다
           미보장시 문제점(갱현모연):갱신손실,현황파악오류,모순성,연쇄복귀
           종류(로 낙타다):로킹,낙관적 검증,타임스탬프순서,다중버전 동시성 제어
           
           데이터베이스 고립화 수준(격리성 주요 기법)
           개념:고립화 수준은 다른 트랜잭션이 현재의 데이터에 대한 무결성을 해치지 않기 위해 잠금을 설정하는 정도
           
           회복기법(영속성 주요 기법)
           개념:트랜잭션을 수행하는 도중 장애로 인해 손상된 데이터베이스를 손상되기 이전의 정상적인 상태로 복구시키는 작업
           종류(회로체크):로그기반 회복기법/체크포인트회복기법/그림자페이징회복기법
           
2.DDL
    1]개념:데이터 정의어는 데이터를 정의하는 언어로서 '데이터를 담는 그릇을 정의하는 언어'이다
           테이블과 같은 데이터 구조를 정의하는데 사용되는 명령어들로 특정 구조를 생성,변경,삭제,이름을 바꾸는 데이터 구조와
           관련된 명령어들을 데이터 정의어라고 부른다
    2]대상:(도스테뷰인):도메인,스키마,테이블,뷰,인덱스
           도메인:하나의 속성이 가질수 있는 원자값들의 집합
                  속성의 데이터 타입과 크기, 제약조건 등의 정보
           스키마:데이터베이스의 구조,제약조건 등의 정보를 담고 있는 기본적인 구조
                  스키마는 외부/개념/내부 3계층으로 구성되어 있음
                           외부:사용자나 개발자의 관점에서 필요로 하는 데이터베이스의 논리적 구조
                                사용자 뷰를 나타냄
                                서브 스키마로 불림
                           개념:데이터베이스의 전체적인 논리적 구조
                                전체적인 뷰를 나타냄
                                개체 간의 관계,제약조건,접근 권한,무결성,보안에 대해 정의
                           내부:물리적 저장장치의 관점에서 보는 데이터베이스 구조
                                실제로 데이터베이스에 저장될 레코드의 형식을 정의하고 저장 데이터 항목의 표현방법
                                내부레코드의 물리적 순서 등을 표현
           테이블:데이터 저장 공간
           뷰:하나 이상의 물리 테이블에서 유도되는 가상의 테이블
           인덱스:검색을 빠르게 하기 위한 데이터 구조
                  종류(순해비함 단결클):순서,해시,비트맵,함수기반,단일,결합,클러스터드
                  순서:데이터가 정렬된 순서로 생성되는 인덱스
                  해시:해시함수에 의해 직접 데이터에 키 값으로 접근하는 인덱스
                  비트맵:각 컬럼에 적은 개수 값이 저장된 경우 선택하는 인덱스
                  함수기반:수식이나 함수를 적용하여 만든 인덱스
                  단일:하나의 컬럼으로만 구성한 인덱스
                  결합:두개 이상의 컬럼으로 구성한 인덱스
                  클러스터드:기본키 기준으로 레코드를 묶어서 저장하는 인덱스
                
   3]명령어(크알드트):CREATE,ALTER,DROP,TRUNCATE
          생성:CREATE:데이터베이스 오브젝트 생성하는 명령어
          수정:ALTER:데이터베이스 오브젝트 생성하는 명령어
          삭제:DROP:데이터베이스 오브젝트 삭제하는 명령어
               TRUNCATE:데이터베이스 오브젝트 내용 삭제하는 명령어

3.DML
    1]개념:데이터 조작어는 데이터베이스에 저장된 자료들을 입력,수정,삭제,조회하는 언어
    2]명령어(세인업데):SELECT,INSERT,UPDATE,DELETE
          조회:SELECT:테이블 내 칼럼에 저장된 데이터를 조회
          삽입:INSERT:테이블 내 칼럼에 데이터를 추가
          갱신:UPDATE:테이블 내 칼럼에 저장된 데이터를 수정
          삭제:DELETE:테이블 내 칼럼에 저장된 데이터를 삭제
          
4.JOIN:조인
    조인은 두개 이상의 테이블을 연결하여 데이터를 검색하는 방법
    두 릴레이션으로부터 관련된 튜플들을 결합하여 하나의 튜플로 만드는 가장 대표적인 데이터 연결 방법
    유형:내부,외부,교차,셀프
    
5.서브쿼리
    개념:서브쿼리는 SQL문안에 포함된 또 다른 SQL문이다
         서브쿼리의 용도는 알려지지 않은 기준을 위한 검색을 위해 사용한다
         메인쿼리와 서브쿼리 관계는 주종 관계로서, 서브쿼리에 사용되는 컬럼 정보는 메인쿼리의 컬럼 정보를 사용할 수 있으나 역으로는 성립하지 않는다
         
6.집합 연산자:set Operator
    개념:집합 연산자는 테이블을 집합 개념으로 보고, 두 테이블 연산에 집합 연산자를 사용하는 방식
         집합 연산자는 여러 질의 결과를 연결하여 하나로 결합하는 방식을 사용한다
    유형:UNION(합),UNION ALL(중복행 제거하지않은 합),INTERSECT(중복 레코드만),MINUS(차)
    
7.DCL
   개념:데이터 제어어는 데이터베이스 관리자가 데이터 보안, 무결성 유지, 병행 제어, 회복을 위해 관리자DBA가 사용하는 제어용 언어
        데이터 제어어의 유형으로 GRANT,REVOKE
        GRANT:사용권한부여:관리자DBA가 사용자에게 데이터베이스에 대한 권한을 부여하는 명령어
        REVOKE:사용권한취소:관리자DBA가 사용자에게 부여했던 권한을 회수하기 위한 명령어
        
8.집계함수
    개념:총합,평균 등의 데이터 분석을 위해서는 복수 행 기준의 데이터를 모아서 처리하는 것을 목적으로 하는 다중 행 함수이다
    종류:집계합수,그룹함수,윈도함수
    집계함수:COUNT,SUM,AVG,MAX,MIN,STDDEV(표준편차),VARIAN(분산)
    그룹함수:ROLLUP,CUBE,GROUPING SETS
    윈도함수:순위함수(RANK,DENSE_RANK,ROW_NUMBER),행 순서함수(FIRST_VALUE,LAST_VALUE,LAG,LEAD),그룹 내 비율 함수(RATIO_TO_REPORT,PERCENT_RANK)
    
9.절차형 SQL
    개념:절차형 SQL은 일반적인 개발 언어처럼 SQL 언어에서도 절차 지향적인 프로그램이 가능하도록 하는 트랜잭션 언어이다
    종류:프로시저:일련의 쿼리들을 마치 하나의 함수처럼 실행하기 위한 쿼리의 집합
         사용자 정의함수:일련의 SQL처리를 수행하고, 수행 결과를 단일 값으로 반환할 수 있는 절차형 SQL
                구성:디비컨SER(선언부,시작종료부,제어부,SQL,예외부,반환부)
         트리거:데이터베이스 시스템에서 삽입,갱신,삭제 등의 이벤트가 발생할 때마다 관련 작업이 자동으로 수행되는 절차형SQL
                구성:디이비컨SE(선언부,이벤트부,시작종료부,제어부,SQL,에외부)
                
10.옵티마이저
    개념:옵티마이저는 SQL을 가장 빠르고 효율적으로 수행할 최적의 처리경로를 생성해주는 DBMS내부의 핵심엔진이다
         옵티마이저가 생성한 SQL처리경로를 실행계획이라고 부른다
    유형:RBO,CBO
         RBO:규칙기반 옵티마이저
              통계 정보가 없는 상태에서 사전 등록된 규칙에 따라 질의 실행 계획을 선택하는 옵티마이저
              규칙(우선 순위)기반
              인덱스 구조,연산자,조건절 형태
              사용자가 원하는 처리경로로 유도하기가 쉬움
         CBO:통계 정보로부터 모든 접근 경로를 고려한 질의실행 계획을 선택하는 옵티마이저
              비용(수행 시간)기반
              레코드 개수,블로 개수,평균 행 길이, 컬럼 값의 수, 컬럼값 분포,인덱스 높이,클러스터링 팩터등
              옵티마이저의 이해도가 낮아도 성능보장 가능(기본 설정)
              
11.DDL,DML,DCL
   DDL(크알드트)테이블관련
      1]생성:CREATE 1)create table 테이블명
                         (컬럼명 데이터타입 속성,
                              . . .
                          );
                    2)create view 뷰명 as select문
                    3)create index 인덱스명 on 테이블명(컬럼명....);
      2]수정:ALTER 1)alter table 테이블명 add 컬럼명 데이터타입 제약조건;
      3]삭제:DROP 1)drop table 테이블명 [cascade/restrict]
      4]내용삭제:TRUNCATE 1)truncate table 테이블명;
  DML(세인업데)내용관련
      1]조회:SELECT * 아니면 속성명 1,속성명 2 
                FORM 테이블명1,...
                [WHERE 조건]
                [GROUP BY 속성명1,...][HAVING 그룹조건]
                [ORDER BY 속성 [DESC/ASC]
      2]삽입:INSERT INTO 테이블명(속성명1,속성명2...) VALUES(데이터값1, 데이터값2...);
      3]변경:UPDATE 테이블명 SET 속성명=데이터 WHERE 조건;
      4]삭제:DELETE FROM 테이블명 WHERE 조건;
  DCL권한관련
      1]부여:GRANT 권한(세인업데) ON 테이블명 TO 사용자;
      2]회수:REVOKE 권한 ON 테이블명 FROM 사용자;
  
