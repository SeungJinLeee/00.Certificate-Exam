1.개발환경 구축
  개발 도구의 분류(빌구테형):빌드,구현,테스트,형상관리
      빌드도구:작성한 코드의 빌드 및 배포를 수행하는 도구
              각각의 구성요소와 모듈에 대한 의존성 관리를 지원
              Maven,Gradle,Ant
      구현도구:개발자의 코드 작성과 디버깅,수정 등과 같은 작업을 지원하는 도구
                프로그램을 개발할 때 가장 많이 사용되는 도구
                Eclipse,Spring Tool Suite,Visual Studio
      테스트도구:코드의 기능 검증과 전체의 품질을 높이기 위해 사용하는 도구
                 코드의 테스트, 테스트에 대한 계획,수행 및 분석 등의 작업 기능
                xUnit,PMD...
      형상관리도구:개발자들이 작성한 코드와 리소스 등 산출물에 대한 버전 관리를 위한 도구
                   프로젝트 진행 시 필수로 포함되는 도구
                   CVS,Subversion,Git
                   공유폴더방식(RCS,SCCS)
                   클라이언트/서버방식(CVS,SVN)
                   분산 저장소 방식(Git)

하드웨어 개발환경
2.하드웨어 개발환경
      웹 서버:HTTP를 이용한 요청/응답을 처리
              웹 상의 정적 콘텐츠(CSS,Javascript,Image)처리
              WEB-WAS-DB의 3계층 구조를 실무에서 활용
              주요 제품으로  Apache 웹서버,IIS웹서버, Google Web Server,Nginx등 존재
      웹 애플리케이션 서버:동적 컨텐츠(Servlet,JSP)를 처리하기 위해 사용
                           주요 제품으로 Tomcat,Weblogic,Jeus,Resin등 존재
      데이터베이스 서버:데이터의 수집,저장을 위한 용도로 사용
                        연계되는 주요 DBMS로 MySql,Oracle,Ms-SQL,DB2등 존재
      파일 서버:파일 저장 하드웨어로 물리 저장장치를 활용한 서버
                대용량 HDD,SSD 등의 장치가 존재

3.클라이언트 하드웨어 개발환경
      서버 개발환경에서 제공된 서비스를 사용하기 위한 UI를 제공한다
      클라이언트 프로그램,웹 브라우저,모바일 앱, 모바일 웹으로 구분한다
      클라이언트 프로그램:설치를 통해 사용자와 컴니케이션하는 프로그램
                          Visual Basic,C#,Delphi등으로 개발되어 사용
      웹 브라우저:웹 서비스의 형태로 웹 애플리케이션을 응답시 브라우저를 통해 사용자와 커뮤니케이션
                  일반적인 형태의 웹 사이트가 해당
      모바일 앱:모바일 디바이스에 설치되어 활용되는 애플리케이션
                앱스토어,안드로이드 마켓등을 통해 다운로드 가능
      모바일 웹:웹 브라우저와 동일한 형태로 모바일상 웹 브라우저를 통해 서비스를 제공
                모바일에 최적화되어 제공되는 웹사이트가 해당

4.소프트웨어 개발환경
      운영체제:서버의 하드웨어를 사용자 관점에서 편리하고 유용하게 사용하기 위한 소프트웨어
                프로젝트의 성격에 따른 운영체제 사용
                Windows,Unix,Linux
      미들웨어:컴퓨터와 컴퓨터 간의 연결을 쉽고 안전하게 할 수 있도록 해주고 이에 대한 관리를 도와주는 소프트웨어
                자바 기반 환경에서 JVM을 설치하여 컨테이너로의 기능을 주로 사용
                Weblogic,Tomcat,Jeus
      DBMS:사용자와 데이터베이스 사이에서 사용자의 요구에 따라 정보를 생성해주고,데이터베이스를 관리해주는 소프트웨어
            데이터의 저장 및 활용을 위해 DBMS를 설치
            Oracle,MySQL
      
5.모듈의 개념
      모듈은 그 자체로 하나의 완전한 기능을 수행할 수 있는 독립된 실체
      모듈화를 통해 분리된 시스템의 각 기능들로 서브프로그램,서브 루틴,소프트웨어 내의 단위 프로그램, 작업단위등과 같은 의미로 사용된다
      
6.결합도:모듈간의 상호의존성(내공외제스자)
    내용>공통>외부>제어>스탬프>자료(좋은품질)

    내용(Content)/다른 모듈 내부에 있는 변수나 기능을 다른 모듈에서 사용하는 경우의 결합도
    공통(Common)/파라미터가 아닌 모듈 밖에 선언되어 있는 전역 변수를 참조하고, 전역변수를 갱신하는 식으로 상호작용하는 경우의 결합도
    외부(External)/두개의 모듈이 외부에서 도입된 데이터 포맷,통신,프로토콜,또는 디바이스 인터페이스를 공유할 경우의 결합도
    제어(Control)/단순 처리할 대상인 값만 전달하는게 아니라 어떻게 처리해야한다는 제어 요소가 전달되는 경우의 결합도
    스탬프(Stamp)/모듈간의 인터페이스로 배열이나 객체,구조등이 전달되는 경우의 결합도
    자료(Data)/모듈간의 인터페이스로 전달되는 파라미터를 통해서만 모듈간의 상호 작용이 일어나는 경우의 결합도

7.응집도-모듈의 독립성을 나타내는 정도, 모듈 내부 구성 요소 간의 연관 정도( 우논시절통순기)
    우연적<논리적<시간적<절차적<통신적<순차적<기능적(좋은품질)

    우연적(Coincidental)/모듈 내부의 각 구성요소가 연관이 없을 경우의 응집도
    논리적(Logical)/유사한 성격을 갖거나 특정형태로 분류되는 처리 요소들이 한 모듈에서 처리되는 경우의 응집도
    시간적(Temporal)/연관된 기능이라기보다는 특정시간에 처리되어야 하는 활동들을 한 모듈에서 처리할 경우의 응집도
    절차적(Procedural)/모듈이 다수의 관련 기능을 가질 때 모듈안의 구성요소들이 그 기능을 순차적으로 수행할 경우의 응집도 
    통신적(Communication)/동일한 입력과 출력을 사용하여 다른 기능을 수행하는 활동들이 모여있을 경우의 응집도
    순차적(Sequential)/모듈내에서 한 활동으로부터 나온 출력값을 다른 활동이 사용할 경우의 응집도
    기능적(Functional)/모듈내부의 모든 기능이 단일한 목적을 위해 수행되는 경우의 응집도

8.공통 모듈 구현
    DTO/VO구현==>SQL구현==>DAO구현==>Service구현==>Controller구현==>필요시 화면 구현
  
9.MVC패턴 역할
    Model:애플리케이션이 무엇을 할 것인지를 정의
          내부 비즈니스 로직을 처리하기 위한 역할
    View:화명에 무엇인가를 보여주기 위한 역할
          모델,컨트롤러가 보여주려고 하는 것들을 화면에 처리
    Controller:모델이 어떻게 처리할지를 알려주는 역할
                뷰에 명령을 보내어 화면 요청 결과를 전달
                
10.팬인 팬아웃
    팬인:어떤 모듈을 제어(호출)하는 모듈의 수(들어오는 수)
    팬아웃:어떤 모듈에 의해 제어(호출)되는 모듈의수(나가는 수)
    
11.공통모듈테스트 
    개념:공통 모듈 테스트를 위해 IDE도구를 활용하여 개별 공통 모듈에 대한 디버깅을 수행한다
        대표적인 단위테스트 도구인 JUnit을 활용하여 테스트 코드를 구현한다
    종류:화이트박스기법,메서드기반테스트,화면기반테스트,테스트 드라이버(상향식)테스트스텁(하향식)
    
12.JVM
    자바 바이트 코드를 실행할 수 있는 주체로 CPU나 운영체제 종류와 무관하게 동작하는 것을 보장하는 가상머신
    
13.배치 프로그램
    개념:사용자와의 상호작용없이 일련의 작업들을 작업 단위로 묶어 정기적으로 반복수행하거나 정해진 규칙에 따라 일괄처리하는 프로그램
    배치 스케줄러 종류
        스프링 배치:스프링 프레임워크의 DI,AOP,서비스 추상화등 스프링 프레임워크의 3대 요소를 모두 사용할 수 있는 대용량
                    처리를 제공하는 배치 애플리케이션
        쿼츠 스케쥴러:스프링 프레임워크에 플러그인되어 수행하는 작업과 실행 스케줄을 정의하는 트리거를 분리하여 유연성을 제공하는 오픈 소스 기반 스케줄러
            쿼츠 크론 표현식
               순서
               초 분 시 일 월 요일 년
               기호
               * 모든수 ? 해당 항목을 미사용 - 기간설정 . 특정 기간 설정 / 시작시간과 반복간격 설정 L 마지막 기간에 동작 W 가장 가까운 평일에 동작 # 몇번째 주,요일 설정
    
